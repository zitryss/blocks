package blocks

import (
	"testing"
)

func TestBlocks(t *testing.T) {
	testCases := []struct {
		input []int
		want  string
	}{
		{[]int{}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁"},
		{[]int{3, 2, 9, 9, 5, 2, 1, 3, 6, 10}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▂▇▇▄▂▁▃▅█"},
		{[]int{3, 8, 8, 6, 1, 6, 5, 9, 1, 5}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▇▇▅▁▅▄█▁▄"},
		{[]int{2, 7, 3, 1, 10, 4, 6, 10, 8, 8}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▅▃▁█▃▅█▆▆"},
		{[]int{75, 14, 47, 4, 31, 40, 96, 78, 62, 9}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆▂▄▁▃▃█▆▅▁"},
		{[]int{50, 23, 94, 9, 86, 9, 60, 42, 57, 86}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄▂█▁▇▁▅▄▅▇"},
		{[]int{7, 94, 22, 43, 26, 83, 55, 73, 48, -1}, "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▂▄▂▇▅▆▄▁"},
	}
	b := New()
	for _, tc := range testCases {
		for _, i := range tc.input {
			b.Add(i)
		}
		if got := b.String(); got != tc.want {
			t.Errorf("b.data = %#v; b.Strings() = %v; want %v", tc.input, got, tc.want)
		}
		b.Reset()
	}
}

func TestBlocks_SetSize(t *testing.T) {
	input := []int{5, 6, 3, 4, 9, 5, 2, 8, 2, 10}
	want := "▁▁▁▁▁▄▂▆▂█"
	b := New()
	b.SetSize(5)
	for _, i := range input {
		b.Add(i)
	}
	b.SetSize(10)
	if got := b.String(); got != want {
		t.Errorf("b.data = %#v; b.Strings() = %v; want %v", input, got, want)
	}
}
